@model IEnumerable<paradise.Models.cours>

@{
    ViewBag.Title = "Quản lý khóa học";
}
<link href="~/Content/custom-css/SwitchButton.css" rel="stylesheet" />

<link href="~/Content/custom-css/ListView.css" rel="stylesheet" />

@{
    // Overlay loading theo chuẩn
    Html.RenderPartial("OverLayLoading", "AdminCourse");
}

<h4 class="fw-bold m-0">Quản lý khóa học</h4>

<div class="d-flex justify-content-between align-items-center mt-5">
    @{
        // SearchingBar(placeholder, controller)
        Html.RenderPartial("SearchingBar", Tuple.Create("Tìm theo tiêu đề hoặc email người tạo", "AdminCourse"));

        // AddingButton(controller)
        Html.RenderPartial("AddingButton", Tuple.Create("AdminCourse"));
    }
</div>

<div class="table-responsive overflow-hidden mt-2 p-4">
    <table class="table align-middle mb-0">
        <thead>
            <tr>
                <th>Tiêu đề</th>
                <th>Chủ đề</th>
                <th>Người tạo (Email)</th>
                <th class="text-end">Giá</th>
                <th>Ngày tạo</th>
                <th class="text-nowrap">Hiển thị</th>

                <th class="text-center">Thao tác</th>
            </tr>
        </thead>
        <tbody>
            @if (Model != null && Model.Any())
            {
                foreach (var c in Model)
                {
                    <tr>
                        <td class="fw-semibold">@c.course_title</td>
                        <td>@(c.topic?.topic_name ?? "")</td>
                        <td>@(c.user?.email ?? "")</td>
                        <td class="text-end">
                            @String.Format(
                                System.Globalization.CultureInfo.GetCultureInfo("vi-VN"),
                                "{0:N0} đ",
                                (decimal?)c.price ?? 0
                            )
                        </td>
                        <td>
                            @c.created_at.ToString("dd/MM/yyyy")
                        </td>
                        <td>
                            <div class="toggler">
                                <input id="toggler-@c.id"
                                       name="toggler-@c.id"
                                       type="checkbox"
                                       class="toggle-visible"
                                       data-id="@c.id"
                                       @(c.is_visible ? "checked" : "") />
                                <label for="toggler-@c.id">
                                    <svg class="toggler-on" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 130.2 130.2">
                                        <polyline class="path check" points="100.2,40.2 51.5,88.8 29.8,67.5"></polyline>
                                    </svg>
                                    <svg class="toggler-off" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 130.2 130.2">
                                        <line class="path line" x1="34.4" y1="34.4" x2="95.8" y2="95.8"></line>
                                        <line class="path line" x1="95.8" y1="34.4" x2="34.4" y2="95.8"></line>
                                    </svg>
                                </label>
                            </div>
                        </td>
                        <td class="action-icons">
                            <div class="dropdown">
                                <div class="cursor-pointer d-flex align-items-center justify-content-center text-dark text-decoration-none" id="dropdownCourse" data-bs-toggle="dropdown" aria-expanded="false">
                                    <button class="icon-btn">
                                        <i class="bi bi-three-dots-vertical"></i>
                                    </button>
                                </div>
                                <ul class="dropdown-menu custom-dropdown shadow bg-white" aria-labelledby="dropdownCourse">
                                    <li>
                                        <a href="@Url.Action("Edit", "AdminCourse", new { area = "Admin", id = c.id })" class="text-decoration-none">
                                            <button class="action_btn">Chỉnh sửa</button>
                                        </a>
                                        <a href="@Url.Action("Details", "AdminCourse", new { area = "Admin", id = c.id })" class="text-decoration-none">
                                            <button class="action_btn">Chi tiết</button>
                                        </a>

                                    </li>
                                    <li>
                                        <button class="action_btn" title="Delete"
                                                data-bs-toggle="modal"
                                                data-bs-target="#deleteModal"
                                                data-courseid="@c.id"
                                                data-coursetitle="@c.course_title">
                                            Xóa
                                        </button>
                                    </li>
                                </ul>
                            </div>
                        </td>
                    </tr>
                }
            }
            else
            {
                <tr>
                    <td colspan="7" class="text-center text-muted p-5">
                        Không có dữ liệu.
                    </td>
                </tr>
            }
        </tbody>
    </table>

    @{
        // Pagination(page, totalPages, actionName, search)
        Html.RenderPartial(
            "Pagination",
            Tuple.Create((int)ViewBag.Page, (int)ViewBag.TotalPages, "Index", (string)ViewBag.Search)
        );
    }
</div>

@* Modal xác nhận xóa *@
<div class="modal fade" id="deleteModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content border-0 shadow-lg rounded-3">
            <div class="modal-header bg-dark text-white rounded-top-3">
                <h5 class="modal-title fw-semibold">Xác nhận xóa</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <p>Bạn có chắc chắn muốn xóa khóa học <strong id="deleteCourseTitle"></strong> không?</p>
            </div>
            <div class="modal-footer">
                <form id="deleteForm" method="post" action="">
                    <button type="button" class="btn btn-light border" data-bs-dismiss="modal">Hủy</button>
                    @Html.AntiForgeryToken()
                    <button type="submit" class="btn btn-dark shadow-sm">Xóa</button>
                </form>
            </div>
        </div>
    </div>
</div>

<script>
    const deleteModal = document.getElementById('deleteModal');
    deleteModal.addEventListener('show.bs.modal', function (event) {
        const button = event.relatedTarget;
        const courseId = button.getAttribute('data-courseid');
        const courseTitle = button.getAttribute('data-coursetitle');

        document.getElementById('deleteCourseTitle').textContent = courseTitle || '';

        const form = document.getElementById('deleteForm');
        form.action = `/Admin/AdminCourse/Delete/${courseId}`;
    });
</script>

<script>
    document.addEventListener("change", function (e) {
        if (e.target.classList.contains("toggle-visible")) {
            var id = e.target.getAttribute("data-id");
            var isVisible = e.target.checked;

            fetch('/Admin/AdminCourse/UpdateVisibility', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/x-www-form-urlencoded'
                },
                body: `id=${id}&isVisible=${isVisible}`
            })
                .then(res => res.json())
                .then(data => {
                    if (data.success) {
                        console.log("Cập nhật thành công:", data.isVisible);
                    } else {
                        alert("Không tìm thấy review!");
                    }
                })
                .catch(err => alert("Có lỗi xảy ra!"));
        }
    });
</script>