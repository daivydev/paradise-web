@model Tuple<int, int, string, string>
@{
    int currentPage = Model.Item1;   // số trang hiện tại
    int totalPages = Model.Item2;    // tổng số trang
    string actionName = Model.Item3; // tên action gọi đến
    string searchQuery = Model.Item4; // chuỗi tìm kiếm (nếu có)
    int maxVisible = 1;
    int startPage = Math.Max(1, currentPage - 2);
    int endPage = Math.Min(totalPages, currentPage + 2);

    if (endPage - startPage + 1 < maxVisible)
    {
        if (startPage == 1)
        {
            endPage = Math.Min(totalPages, startPage + maxVisible - 1);
        }
        else if (endPage == totalPages)
        {
            startPage = Math.Max(1, endPage - maxVisible + 1);
        }
    }
}

<div class="d-flex justify-content-center my-2">
    <nav>
        <ul class="pagination pagination-modern m-0">
            <!-- Previous -->
            <li class="page-item @(currentPage <= 1 ? "disabled" : "")">
                <a class="page-link" href="@Url.Action(actionName, new { page = currentPage - 1, search = searchQuery })">
                    <i class="bi bi-arrow-left"></i>
                </a>
            </li>

            <!-- Trang đầu + ... -->
            @if (startPage > 1)
            {
                <li class="page-item">
                    <a class="page-link" href="@Url.Action(actionName, new { page = 1, search = searchQuery })">1</a>
                </li>
                if (startPage > 2)
                {
                    <li class="page-item disabled"><span class="page-link">...</span></li>
                }
            }

            <!-- Các trang trong khoảng -->
            @for (int i = startPage; i <= endPage; i++)
            {
                <li class="page-item @(i == currentPage ? "active" : "")">
                    <a class="page-link" href="@Url.Action(actionName, new { page = i, search = searchQuery })">@i</a>
                </li>
            }

            <!-- Trang cuối + ... -->
            @if (endPage < totalPages)
            {
                if (endPage < totalPages - 1)
                {
                    <li class="page-item disabled"><span class="page-link">...</span></li>
                }
                <li class="page-item">
                    <a class="page-link" href="@Url.Action(actionName, new { page = totalPages, search = searchQuery })">@totalPages</a>
                </li>
            }

            <!-- Next -->
            <li class="page-item @(currentPage >= totalPages ? "disabled" : "")">
                <a class="page-link" href="@Url.Action(actionName, new { page = currentPage + 1, search = searchQuery })">
                    <i class="bi bi-arrow-right"></i>
                </a>
            </li>
        </ul>
    </nav>
</div>
